<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis</title>
      <link href="2021/05/01/mybatis/"/>
      <url>2021/05/01/mybatis/</url>
      
        <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li><p>框架</p><ul><li>软件开发中的一套解决方案，不同的框架解决不同的问题。mybatis层框架解决持久层问题。</li><li>框架封装了很多的细节，使开发者可以使用极简的方式实现功能。大大提供开发效率。</li></ul></li><li><p>三层架构</p><ul><li>表现层<ul><li>展示数据</li></ul></li><li>业务层<ul><li>处理业务需求</li></ul></li><li>持久层<ul><li>和数据库交互</li></ul></li></ul></li></ul><p><img src="https://gitee.com/wuyueping/images/raw/master/img/ssm_20210419230439.png" alt="image-20210419230431563"></p><ul><li><p>持久层技术解决方案</p><ul><li>JDBC技术<ul><li>Connection</li><li>PreparedStatement</li><li>ResultSet</li></ul></li><li>Spring的JdbcTemplate<ul><li>Spring中对jdbc的简单封装</li></ul></li><li>Apache的DButils<ul><li>也是对Jdbc的简单封装</li></ul></li></ul><p>——–只是工具类</p></li><li><p>mybatis框架概述</p><ul><li>基于Java的持久层框架，内部封装了jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</li><li>它使用了ORM思想实现了结果集的封装。</li><li>ORM object relational mapping 对象关系映射<ul><li>把数据库表和实体类及实体类的属性对应起来，让我们可以操作实体类就实现操作数据库表。</li></ul></li></ul></li><li><p>环境搭建</p><ul><li><input disabled="" type="checkbox"> 1、创建maven工程并导入坐标</li><li><input disabled="" type="checkbox"> 2、创建实体类和dao的接口</li><li><input disabled="" type="checkbox"> 3、创建mybatis的主配置文件 SqlMapConfig.xml</li><li><input disabled="" type="checkbox"> 4、创建映射配置文件 IUserDao.xml</li></ul></li></ul><p>注意事项</p><ul><li><input disabled="" type="checkbox"> 1、创建IUserDao.xml和 IUserDao.java 时名称是为了和我们之前的知识保持一致。在mybatis中它把持久层的操作接口名称和映射文件也叫做：Mapper。所以IUserDao 和 IUserMapper是一样的。</li><li><input disabled="" type="checkbox"> 2、idea中创建目录和包是不一样的。包在创建时co m.example.dao它是三级结构。目录在创建时com.example.dao是一级目录。</li><li><input disabled="" type="checkbox"> 3、mybatis的映射配置文件位置必须和dao接口的包结构相同。</li><li><input disabled="" type="checkbox"> 4、映射配置文件的mapper标签的namespace属性的取值必须是dao接口的全限定类名。</li><li><input disabled="" type="checkbox"> 5、映射配置文件的操作属性，id属性的取值必须是dao接口的方法名</li></ul><p>当遵从了三、四、五之后，开发中就无须再写dao的实现类。</p><h4 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h4><p>SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis主配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源(连接池)--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接数据库的4个基本信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/demo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定映射配置文件的位置 映射配置文件指的是每个dao独立的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/example/dao/IUserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>main</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.读取配置文件</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"><span class="comment">//2.创建 SqlSessionFactory 工厂</span></span><br><span class="line"><span class="comment">// mybatis 通过SqlSessionFactoryBuilder的build 解析配置文件、细节封装</span></span><br><span class="line">SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">SqlSessionFactory factory = builder.build(in);</span><br><span class="line"><span class="comment">//3.使用工厂生产SqlSession对象</span></span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line"><span class="comment">//4.使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">IUserDao userDao = sqlSession.getMapper(IUserDao.class);</span><br><span class="line"><span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">List&lt;User&gt; users = userDao.findAll();</span><br><span class="line"><span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6.释放资源</span></span><br><span class="line">sqlSession.close();</span><br><span class="line">in.close();</span><br></pre></td></tr></table></figure><p>注意事项</p><ul><li><input disabled="" type="checkbox"> 在映射配置中告知mybatis要封装到哪个实体类中； 配置的方式：指定实体类的全限定类名</li></ul><p>IUserDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.dao.IUserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置查询所有 resultXXXX 配置结果集封装到哪--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="通过注解配置"><a href="#通过注解配置" class="headerlink" title="通过注解配置"></a>通过注解配置</h5><p>SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis主配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源(连接池)--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接数据库的4个基本信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/demo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定映射配置文件的位置 映射配置文件指的是每个dao独立的配置文件</span></span><br><span class="line"><span class="comment">            &lt;mapper resource=&quot;com/example/dao/IUserDao.xml&quot;/&gt;</span></span><br><span class="line"><span class="comment">        如果是用注解来配置的话，此处应该使用class属性指定被注解的dao的全限定类名</span></span><br><span class="line"><span class="comment">            &lt;mapper class=&quot;com.example.dao.IUserDao&quot;/&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.example.dao.IUserDao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>IUserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wuyueping</span></span><br><span class="line"><span class="comment"> * 用户的持久层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="写dao实现类的方式"><a href="#写dao实现类的方式" class="headerlink" title="写dao实现类的方式"></a>写dao实现类的方式</h5><p>UserDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory factory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span><span class="params">(SqlSessionFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.factory = factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.使用工厂创建 SqlSession</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line">        <span class="comment">//2.使用session执行查询所有方法</span></span><br><span class="line">        <span class="comment">// 不写语句 该为通过配置拿到语句</span></span><br><span class="line">        List&lt;User&gt; users = session.selectList(<span class="string">&quot;com.example.dao.IUserDao.findAll&quot;</span>);</span><br><span class="line">        session.close();</span><br><span class="line">        <span class="comment">//3.返回查询结果</span></span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步就可以不使用代理了 直接传factory到实现类</p><p>main</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.example.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.读取配置文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//2.创建 SqlSessionFactory 工厂</span></span><br><span class="line">        <span class="comment">// mybatis 通过SqlSessionFactoryBuilder的build 解析配置文件、细节封装</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line">        <span class="comment">//3.使用工厂生产SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession = factory.openSession();</span><br><span class="line">        <span class="comment">//4.使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">        <span class="comment">// IUserDao userDao = sqlSession.getMapper(IUserDao.class);</span></span><br><span class="line">        IUserDao userDao = <span class="keyword">new</span> UserDaoImpl(factory);</span><br><span class="line">        <span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/wuyueping/images/raw/master/img/20210423125125.png" alt="image-20210422114602540" style="zoom:50%;" /><p>main代码分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.读取配置文件</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、使用类加载器，它只能读取类路径的配置文件</span></span><br><span class="line"><span class="comment">2、使用servletContext对象的getRealPath()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 绝对路径 、相对路径(X)</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"><span class="comment">//2.创建 SqlSessionFactory 工厂</span></span><br><span class="line"><span class="comment">// mybatis 通过SqlSessionFactoryBuilder的build 解析配置文件、细节封装</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建工厂mybatis使用了[构建者模式]</span></span><br><span class="line"><span class="comment">构建者模式： SqlSessionFactor构建者 不用在意细节 只关注结果</span></span><br><span class="line"><span class="comment">优势：把对象的创建细节隐藏，使使用者直接调用方法即可拿到对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">生产SqlSession使用了工厂模式</span></span><br><span class="line"><span class="comment">优势：解耦 降低类之间的依赖关系</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">getMapper 创建Da接口实现类代理模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">SqlSessionFactory factory = builder.build(in);</span><br><span class="line"><span class="comment">//3.使用工厂生产SqlSession对象</span></span><br><span class="line">SqlSession sqlSession = factory.openSession();</span><br><span class="line"><span class="comment">//4.使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">IUserDao userDao = sqlSession.getMapper(IUserDao.class);</span><br><span class="line"><span class="comment">// IUserDao userDao = new UserDaoImpl(factory);</span></span><br><span class="line"><span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">List&lt;User&gt; users = userDao.findAll();</span><br><span class="line"><span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6.释放资源</span></span><br><span class="line">sqlSession.close();</span><br><span class="line">in.close();</span><br></pre></td></tr></table></figure><h5 id="查询所有的分析"><a href="#查询所有的分析" class="headerlink" title="查询所有的分析"></a>查询所有的分析</h5><ul><li><input disabled="" type="checkbox"> mybatis 在使用代理dao的方式实现增删改查时做了什么 ?<ul><li><input disabled="" type="checkbox"> 1、创建代理对象</li><li><input disabled="" type="checkbox"> 2、在代理对象中调用selectList</li></ul></li></ul><p>执行查询的分析</p><ul><li><input disabled="" type="checkbox"> 读取配置文件<ul><li><input disabled="" type="checkbox"> 用到的技术就是解析XML的技术：此处用的是dom4j解析XML技术</li></ul></li></ul><p><strong>关键！！！</strong></p><ol><li><p><strong>连接信息</strong></p></li><li><p><strong>映射信息</strong></p><ul><li><strong>执行的SQL语句</strong></li><li><strong>封装结果的实体类全限定类名</strong></li></ul><p><strong>把这两个信息结合起来定义成一个对象</strong></p></li></ol><p>1、根据配置文件的信息创建connection对象</p><p>​    注册驱动、获取链接</p><p>2、获取预处理对象preparedstatement</p><p>​    此时需要SQL语句 conn.prepareStatement(sql)</p><p>3、执行查询</p><p>​    ResultSet resultSet = preparedStatement.executeQuery();</p><p>4、遍历结果集用于封装</p><p>​        List&lt; E &gt; list = new ArrayList&lt;&gt;();</p><p>​        while(resultSet.next()) {</p><p>​            E element = Class.forName(配置的全限定类名).newInstance() <em>反射封装</em></p><p>​            进行封装 把每个rs的内容都添加到element中</p><p>​            实体类属性和表中的列名是一致的。就可以把表中的列名看成是实体类的属性名称。就可以使用反射的方式来根据名称获取每个属性，并把值赋进去。</p><p>​            把element加入到list中</p><p>​            list.add(element)</p><p>​        }</p><p>5、返回list集合</p><h5 id="创建代理对象分析"><a href="#创建代理对象分析" class="headerlink" title="创建代理对象分析"></a>创建代理对象分析</h5><p>根据dao接口的字节码创建dao的代理对象</p><p>getMapper {</p><p>/*</p><p>类加载器：使用的和被代理对象是相同的类加载器</p><p>代理对象要实现的接口：和被代理对象实现相同的接口</p><p>如何代理：增强的方法。此处是一个InvocationHandler的接口，需要写一个该接口的实现类，在实现类中调用selectList方法</p><p>*/</p><p>Proxy.newProxyInstance(类加载器，代理对象要实现的接口字节码数组)</p><p>}</p><h5 id="自定义mybatis"><a href="#自定义mybatis" class="headerlink" title="自定义mybatis"></a>自定义mybatis</h5><table><thead><tr><th>class</th><th>Resources</th></tr></thead><tbody><tr><td>class</td><td>SqlSessionFactoryBuilder</td></tr><tr><td>interface</td><td>SqlSessionFactory</td></tr><tr><td>interface</td><td>SqlSession</td></tr></tbody></table><p>去掉</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>增加</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="2021/05/01/redis/"/>
      <url>2021/05/01/redis/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><ul><li>特点 ：缓存产品<ul><li>支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>不仅仅支持简单的key-value类型的数据，同时还提供list,set,zset,hash等数据结构的存储。</li><li>支持数据的备份，即master-slave模式的数据备份。</li></ul></li><li>优势<ul><li>性能极高：读写速度快。</li><li>丰富的数据类型：支持二进制案例的string lists hashes sets ordered sets 数据类型操作。</li><li>原子==要没成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务（原子性），通过multi和exec指令包起来。</li><li>丰富的特性：还支持publish/subscribe，通知，key过期等。</li></ul></li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web项目基础</title>
      <link href="2021/05/01/web%E9%A1%B9%E7%9B%AE%E5%9F%BA%E7%A1%80/"/>
      <url>2021/05/01/web%E9%A1%B9%E7%9B%AE%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaWeb基础"><a href="#JavaWeb基础" class="headerlink" title="JavaWeb基础"></a>JavaWeb基础</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li><p>可扩展标记语言。</p><p>1、Extensible 标签都是自定义的.</p><p>2、Markup Language 标记语言</p></li><li><p><input disabled="" type="checkbox">  功能</p><p>存储数据</p><p>​    1、配置文件</p><p>​    2、在网络中传输</p></li><li><p><input disabled="" type="checkbox">  XML和html的区别</p><p>w3c 万维网联盟。浏览器的恶性竞争导致html没有唯一规范。XML要求严格的语法。XML现主用于配置文件。</p><p>​    1、XML的标签都是自定义的。而html标签都是预定义的。</p><p>​    2、XML的语法严格。html语法松散</p><p>​    3、XML是存储数据的。html是展示数据的</p></li></ul><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p>1、XML文档的后缀名 .xml</p><p>2、XML第一行必须定义文档声明</p><p>3、XML文档中有且仅有一个根标签</p><p>4、属性值必须使用双引号(单双都可)引起来</p><p>5、标签必须正确关闭</p><p>6、XML标签区分大小写</p><h4 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h4><p>1、文档声明</p><p>​        格式：&lt; ? xml 属性列表 ?&gt;</p><p>​        属性列表</p><p>​                version ： 版本号 必须的属性！</p><p>​                encoding： 编码方式 告知解析引擎当前文档使用的字符集，默认：ISO-8859-1</p><p>​                standalone： 是否独立 取值 yes==不依赖其他文件  no==依赖其他文件。可以不设置</p><p>2、指定 </p><ul><li>结合css的<ul><li>&lt; ?xml-stylesheet type=”text/css” href=”a.css” ?&gt;</li></ul></li></ul><p>3、标签</p><ul><li>标签名称自定义的–规则<ul><li>名称可以包含字母、数字以及其他的字符</li><li>名称不能以数字或者标签符号开始</li><li>名称不能以字母 XML 或者 xml Xml等等 开始</li><li>名称不能包含空格</li></ul></li></ul><p>4、属性</p><p>​    id属性值唯一</p><p>5、文本</p><ul><li>CDATA区：在该区域中的数据会被原样展示<ul><li>格式  &lt;![CDATA [要展示的数据] ]&gt;</li></ul></li></ul><p>6、约束 </p><p>说明文档：规定XML文档的书写规则</p><ul><li><p>约束文档</p></li><li><p>分类</p><ul><li><p>DTD 一种简单的约束技术</p><ul><li><p>引入dtd文档到xml文档中</p><ul><li><p>内部dtd：将约束规则定义到XML文档中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;!DOCTYPE students SYSTEM &quot;student.dtd&quot;&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">students</span> [</span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">students</span> (<span class="meta-keyword">student</span>*) &gt;</span></span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">student</span> (<span class="meta-keyword">name</span>,<span class="meta-keyword">age</span>,<span class="meta-keyword">sex</span>)&gt;</span></span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">age</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">sex</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">        <span class="meta">&lt;!ATTLIST <span class="meta-keyword">student</span> <span class="meta-keyword">number</span> <span class="meta-keyword">ID</span> <span class="meta-keyword">#REQUIRED</span>&gt;</span></span></span><br><span class="line"><span class="meta">        ]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">students</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s001&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>25<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s002&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>11<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>22<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>female<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">students</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>外部dtd：将约束的规则定义在外部的dtd文件中</p><ul><li>本地：&lt; ! DOCTYPE 根标签名 SYSTEM “dtd文件的位置” &gt;</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT students (student*) &gt;</span><br><span class="line">&lt;!ELEMENT student (name,age,sex)&gt;</span><br><span class="line">&lt;!ELEMENT name (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT age (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT sex (#PCDATA)&gt;</span><br><span class="line">&lt;!ATTLIST student number ID #REQUIRED&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">students</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;student.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">students</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s001&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>25<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s002&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>11<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>22<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>female<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">students</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>网络：&lt; ! DOCTYPE 根标签名 PUBLIC “dtd文件名字” “dtd文件的位置URL” &gt;</li></ul></li></ul></li></ul></li><li><p>Schema 一种复杂的约束技术</p></li></ul></li></ul><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>操作XML文档，将文档中的数据读取到内存中</p><ul><li><p>操作XML文档</p><ul><li>1、解析 (读取) ：将文档中的数据读取到内存中</li><li>2、写入：将内存中的数据保存到XML文档中。持久化的存储。</li></ul></li><li><p>解析XML的方式</p><ul><li>1、DOM：将标记语言文档一次性加载进内存，在内存中会形成一颗DOM树。<ul><li>优点：操作方便，可以文档进行CRUD的所有操作</li><li>缺点：占内存</li></ul></li><li>2、SAX：逐行读取，基于事件驱动的。<ul><li>优点：不占内存。适用于较小设备 比如手机</li><li>缺点：只能读取，不能增删改。</li></ul></li></ul><p>服务器端一般使用DOM。移动端一般使用SAX</p></li></ul><ul><li>XML常见的解析器<ul><li>1、JAXP：sun公司提供的解析器，支持DOM和SAX两种思想</li><li>2、DOM4J：一款非常优秀的解析器。</li><li>3、Jsoup：一款Java的html解析器，可直接解析某个URL地址、html文本内容。它提供一套非常省力的API，可通过DOM、CSS以及类似于jquery的操作方法来读取和操作数据。</li><li>4、PULL：android操作系统内置的解析器，SAX方式的。</li></ul></li></ul><ul><li><p>Jsoup</p><ul><li><p>操作步骤</p><ul><li>1、导入jar包</li><li>2、获取document对象</li><li>3、获取对应的标签element对象</li><li>4、获取数据</li></ul></li><li><p>对象使用</p><ul><li>Jsoup：工具类，可以解析html或XML文档，返回document<ul><li>parse：解析html或XML文档。返回document</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解析XML文档 加载文档进内存 获取dom树 ---&gt; document</span></span><br><span class="line">Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">&quot;utf-8&quot;</span>);<span class="comment">// student.xml</span></span><br><span class="line">String xml = <span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;&lt;students&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;    &lt;student number=\&quot;s001\&quot;&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;name&gt;zhangsan&lt;/name&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;age&gt;25&lt;/age&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;sex&gt;male&lt;/sex&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;    &lt;/student&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;    &lt;student number=\&quot;s002\&quot;&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;name&gt;11&lt;/name&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;age&gt;22&lt;/age&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;        &lt;sex&gt;female&lt;/sex&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;    &lt;/student&gt;\n&quot;</span> +</span><br><span class="line">  <span class="string">&quot;&lt;/students&gt;&quot;</span>;</span><br><span class="line">Document parse = Jsoup.parse(xml); <span class="comment">// xml</span></span><br><span class="line"><span class="comment">// parse(URL url, int timeoutMillis): 通过网络路径获取指定的html或XML的文档对象</span></span><br><span class="line"><span class="comment">// URL url = new URL(&quot;&quot;);// 代表网络中的一个资源路径</span></span><br></pre></td></tr></table></figure><ul><li>document：文档对象。代表内存中的dom树<ul><li>获取element对象</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3 获取元素对象</span></span><br><span class="line"><span class="comment">// 3.1 获取所有的student对象</span></span><br><span class="line">Elements elements = document.getElementsByTag(<span class="string">&quot;student&quot;</span>);</span><br><span class="line"><span class="comment">// System.out.println(elements);</span></span><br><span class="line"><span class="comment">// 3.2 获取属性名为id的元素对象们</span></span><br><span class="line">Elements id = document.getElementsByAttribute(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  &lt;name id=&quot;demo&quot;&gt;</span></span><br><span class="line"><span class="comment">  zhangsan</span></span><br><span class="line"><span class="comment">  &lt;/name&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// System.out.println(id);</span></span><br><span class="line"><span class="comment">// 3.2 获取 number属性值为s001的元素对象</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  &lt;student number=&quot;s001&quot;&gt;</span></span><br><span class="line"><span class="comment">  &lt;name id=&quot;demo&quot;&gt;</span></span><br><span class="line"><span class="comment">  zhangsan</span></span><br><span class="line"><span class="comment">  &lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;age&gt;</span></span><br><span class="line"><span class="comment">  25</span></span><br><span class="line"><span class="comment">  &lt;/age&gt;</span></span><br><span class="line"><span class="comment">  &lt;sex&gt;</span></span><br><span class="line"><span class="comment">  male</span></span><br><span class="line"><span class="comment">  &lt;/sex&gt;</span></span><br><span class="line"><span class="comment">  &lt;/student&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Elements value = document.getElementsByAttributeValue(<span class="string">&quot;number&quot;</span>, <span class="string">&quot;s001&quot;</span>);</span><br><span class="line"><span class="comment">// System.out.println(value);</span></span><br><span class="line"><span class="comment">// 3.3 获取id属性值的元素对象</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  &lt;name id=&quot;demo&quot;&gt;</span></span><br><span class="line"><span class="comment">  zhangsan</span></span><br><span class="line"><span class="comment">  &lt;/name&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Element number = document.getElementById(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line"><span class="comment">// System.out.println(number);</span></span><br></pre></td></tr></table></figure><ul><li>elements：元素element对象的集合，可以当成arraylist&lt; element&gt;</li><li>element：元素对象<ul><li>1、获取子元素对象</li><li>2、获取属性值</li><li>3、获取文本内容</li></ul></li><li>Node：节点对象 <ul><li>是document和element的父类</li></ul></li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo01.jsoup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jsoup快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1、获取document对象 1)根据XML文档</span></span><br><span class="line">        <span class="comment">//1.1 获取student.xml的path</span></span><br><span class="line">        <span class="comment">// 通过.class获取字节码文件</span></span><br><span class="line">        <span class="comment">// 再通过getClassLoader获取类加载器</span></span><br><span class="line">        <span class="comment">// 通过getResource找到资源文件位置</span></span><br><span class="line">        String path = JsoupDemo1.class.getClassLoader().getResource(<span class="string">&quot;student.xml&quot;</span>).getPath();</span><br><span class="line">        <span class="comment">// 解析XML文档 加载文档进内存 获取dom树 ---&gt; document</span></span><br><span class="line">        Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取元素对象 element</span></span><br><span class="line">        Elements elements = document.getElementsByTag(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">            String name = element.text();</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>快捷查询方式</p><ul><li>1、selector<ul><li>选择器</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询name标签 == 元素选择器</span></span><br><span class="line">Elements elements1 = document.select(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="comment">// System.out.println(elements1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询id值为 demo的元素</span></span><br><span class="line">Elements select = document.select(<span class="string">&quot;#demo&quot;</span>);</span><br><span class="line"><span class="comment">// System.out.println(select);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取student的标签并且number属性值为s001 的age子标签</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        &lt;age&gt;</span></span><br><span class="line"><span class="comment">         25</span></span><br><span class="line"><span class="comment">        &lt;/age&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">Elements select1 = document.select(<span class="string">&quot;student[number=&#x27;s001&#x27;] &gt; age&quot;</span>);</span><br><span class="line">System.out.println(select1);</span><br></pre></td></tr></table></figure><ul><li>2、XPath<ul><li> xpath 即为XML路径语言，它是一种用来确定XML文档中某部分位置的语言</li><li>使用jsoup的</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据document对象 创建 JXDocument 对象</span></span><br><span class="line">JXDocument jxDocument = <span class="keyword">new</span> JXDocument(document);</span><br><span class="line"><span class="comment">// 集合xpath的语法查询</span></span><br><span class="line"><span class="comment">// 选取所有的student标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes = jxDocument.selN(<span class="string">&quot;//student&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode : jxNodes) &#123;</span><br><span class="line">  <span class="comment">// System.out.println(jxNode);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询所有student标签下的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes1 = jxDocument.selN(<span class="string">&quot;//student/name&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode1 : jxNodes1) &#123;</span><br><span class="line">  <span class="comment">// System.out.println(jxNode1);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询student标签下带有id属性的name标签</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes3 = jxDocument.selN(<span class="string">&quot;//student/name[@id]&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode3 : jxNodes3) &#123;</span><br><span class="line">  <span class="comment">// System.out.println(jxNode3);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询student标签下带有id属性的name标签 并且id属性值为demo</span></span><br><span class="line">List&lt;JXNode&gt; jxNodes4 = jxDocument.selN(<span class="string">&quot;//student/name[@id=&#x27;demo&#x27;]&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (JXNode jxNode4 : jxNodes4) &#123;</span><br><span class="line">  System.out.println(jxNode4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="web服务器"><a href="#web服务器" class="headerlink" title="web服务器"></a>web服务器</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>软件架构</p><ul><li>C/S<ul><li>客户端/服务器端</li></ul></li><li>B/S<ul><li>浏览器/服务器端</li></ul></li></ul></li><li><p>资源分类</p><ul><li>静态资源<ul><li>所有用户访问后，得到的结构都是一样的。称为静态资源<ul><li>html、CSS、Javascript</li></ul></li></ul></li><li>动态资源<ul><li>每个用户访问相同资源后，得到的结果可能不一样。称为动态资源。<ul><li>servlet/JSP、php、asp</li></ul></li></ul></li></ul><p>浏览器中有 [静态资源解析引擎]</p><p>动态资源先转换为静态资源，然后被浏览器解析</p><p>请求/响应</p></li><li><p>网络通信三要素</p><ul><li>IP<ul><li>电子设备在网络中的唯一标识</li></ul></li><li>端口<ul><li>应用程序在计算机中的唯一表示。0～65536</li></ul></li><li>传输协议<ul><li>规定了数据传输的规则<ul><li>TCP 安全协议，三次握手</li><li>UDP 不安全协议。速度快。</li></ul></li></ul></li></ul></li></ul><h3 id="web服务器软件"><a href="#web服务器软件" class="headerlink" title="web服务器软件"></a>web服务器软件</h3><ul><li>服务器<ul><li>安装了服务器软件的计算机</li></ul></li><li>服务器软件<ul><li>接收用户的请求，处理请求，做出响应</li></ul></li><li>WEB服务器软件<ul><li>在WEB服务器软件中，可以部署WEB项目，让用户通过浏览器来访问这些项目</li><li>web容器</li></ul></li><li>常见的Java相关的web服务器软件<ul><li>weblogic<ul><li>oracle公司 大型的JavaEE服务器 支持所有的JavaEE规范 收费的</li><li>JavaEE Java语言在企业级开发中使用的技术规范的总和。一共规定了13项大的规范。</li></ul></li><li>webSphere<ul><li>IBM公司 大型的JavaEE服务器 支持所有的JavaEE规范 收费的</li></ul></li><li>JBOSS<ul><li>JBOSS公司  大型的JavaEE服务器 支持所有的JavaEE规范 收费的</li></ul></li><li>tomcat<ul><li>apache基金组织 开源免费 中小型的JavaEE服务器 仅仅支持少量的JavaEE规范。</li></ul></li></ul></li><li>tomcat<ul><li>下载安装使用卸载 启动关闭配置</li><li>文件目录<ul><li>bin<ul><li>可执行文件</li></ul></li><li>conf<ul><li>配置文件</li></ul></li><li>lib<ul><li>依赖jar包</li></ul></li><li>logs<ul><li>日志文件</li></ul></li><li>temp<ul><li>临时文件</li></ul></li><li>webapps<ul><li>存放web项目</li></ul></li><li>work<ul><li>存放运行时的数据</li></ul></li><li>其他文件</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper</title>
      <link href="2021/05/01/zookeeper/"/>
      <url>2021/05/01/zookeeper/</url>
      
        <content type="html"><![CDATA[<h1 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h3><ul><li>开源的分布式，为分布式应用提供协调服务的Apache项目</li><li>基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，zookeeper就将负责同志已经在zookeeper上注册的那些观察者做出相应的反应。</li><li>文件系统 + 通知机制</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>一个领导者leader，多个follower组成的集群</li><li>集群中只要有半数以上的节点存活，zookeeper集群就能正常服务</li><li>全局数据一直；每个server保存一份相同的数据副本，client无论连接到哪个server，数据都是一直的。</li><li>更新请求顺序进行，来自同一个client的更新请求按其发送顺序依次执行。</li><li>数据更新原子性，一次数据更新要么成功，要么失败。</li><li>实时性，在一定时间范围内，client能读到最新数据。</li></ul><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><ul><li>整体上可以看作是一棵树，每个节点称做一个znode。每一个znode默认能够存储1mb的数据，每个znode都可以通过其路径唯一标识。</li></ul><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>统一命名服务<ul><li>对应用/服务进行统一命名，便于识别。</li></ul></li><li>统一配置管理<ul><li>分布式环境下，配置文件同步非常常见<ul><li>一般要求一个集群中，所有节点的配置信息是一致的。</li><li>对配置文件修改后，希望能够快速同步到各个节点上。</li></ul></li><li>配置管理可交由zookeeper实现。<ul><li>可将配置信息写入zookeeper伤的一个zone。</li><li>各个客户端服务器监听这个znode。</li><li>一旦znode中的数据被修改，zookeeper将通知各个客户端服务器 </li></ul></li></ul></li><li>统一集群管理<ul><li>实时掌握每个节点的状态是必要的。<ul><li>可根据节点实时状态做出一些调整。</li></ul></li><li>可以实现实时监控节点状态变化<ul><li>可将节点信息写入zookeeper上的一个znode。</li><li>监听这个znode可获取它的实时状态变化</li></ul></li></ul></li><li>服务器动态上下线<ul><li>客户端能实时洞察到服务器上下线的变化</li></ul></li><li>软负载均衡<ul><li>在zookeeper中记录每台服务器的访问数，让访问数最少的服务器去处理最新的客户端请求</li></ul></li></ul><h1 id="zookeeper内部原理"><a href="#zookeeper内部原理" class="headerlink" title="zookeeper内部原理"></a>zookeeper内部原理</h1><h3 id="选举机制"><a href="#选举机制" class="headerlink" title="选举机制"></a>选举机制</h3><ul><li>半数机制：集群中半数以上机器存活，集群可用。所以zookeeper适合安装奇数台服务器。</li><li> zookeeper工作时，是有一个节点为leader，其他则为follower，leader是通过内部的选举机制临时产生的。</li></ul><h3 id="节点类型"><a href="#节点类型" class="headerlink" title="节点类型"></a>节点类型</h3><ul><li>持久：客户端和服务器断开连接后，创建的节点不删除。<ul><li>持久化目录节点<ul><li>客户端与zookeeper断开连接后，该节点依旧存在</li></ul></li><li>持久化顺序编号目录节点<ul><li>客户端与zookeeper断开连接后，该节点依旧存在，只是zookeeper给该节点的名称进行顺序编号。</li></ul></li></ul></li><li>短暂：客户端和服务器断开连接后，创建的节点自己删除。<ul><li>临时目录节点</li><li>临时顺序编号目录节点</li></ul></li></ul><h3 id="stat结构体"><a href="#stat结构体" class="headerlink" title="stat结构体"></a>stat结构体</h3><h3 id="监听器原理"><a href="#监听器原理" class="headerlink" title="监听器原理"></a>监听器原理</h3><ul><li>首先要有一个main线程</li><li>在main线程中创建zookeeper客户端，这时就会创建两个线程，一个负责网络连接通信connect，一个负责监听listener</li><li>通过connect线程将注册的监听事件发送给zookeeper</li><li>在zookeeper的注册监听列表中将注册的监听事件添加到列表中</li><li>zookeepe监听到有数据或路径变化，就会将这个消息发送给listener线程。</li><li>listener线程内部调用了process方法</li><li>常见的监听<ul><li>监听节点数据的变化</li><li>监听子节点增减的变化</li></ul></li></ul><h3 id="写数据的流程"><a href="#写数据的流程" class="headerlink" title="写数据的流程"></a>写数据的流程</h3><ul><li>客户端向zookeeper的server1上写数据</li><li>如果server1不是leader，那么server1会把接收到的请求进一步转发给leader，因为每个zookeeper的server里面有一个是leader。这个leader会将写请求广播给各个server，各个server写成功后就会通知leader。</li><li>当leader收到大多数server数据写成功了，那么就说明数据写成功了（半数以上）。写成功之后，leader会告诉server1数据写成功了。</li><li>server1会进一步通知客户端数据写成功了，这时就认为整个写操作成功。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="本地模式安装部署"><a href="#本地模式安装部署" class="headerlink" title="本地模式安装部署"></a>本地模式安装部署</h3><h2 id="配置参数解读"><a href="#配置参数解读" class="headerlink" title="配置参数解读"></a>配置参数解读</h2><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h2 id="分布式安装部署"><a href="#分布式安装部署" class="headerlink" title="分布式安装部署"></a>分布式安装部署</h2><h2 id="客户短命令行操作"><a href="#客户短命令行操作" class="headerlink" title="客户短命令行操作"></a>客户短命令行操作</h2><h1 id="api应用"><a href="#api应用" class="headerlink" title="api应用"></a>api应用</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/23/hello-world/"/>
      <url>2021/04/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
